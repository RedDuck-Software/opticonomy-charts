{{- if not .Values.archive.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opticonomy-node.fullname" . }}
  labels:
    app: {{ include "opticonomy-node.name" . }}
    role: {{ .Values.nodeConfig.name | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "opticonomy-node.name" . }}
      role: {{ .Values.nodeConfig.name | quote }}
  template:
    metadata:
      labels:
        app: {{ include "opticonomy-node.name" . }}
        role: {{ .Values.nodeConfig.name | quote }}
    spec:
      serviceAccountName: validator-sa
      containers:
        - name: opticonomy-node
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "-c", "/opticonomy-testnet/scripts/generate_session_keys.sh && /opticonomy-testnet/target/release/substrate-opticonomy"]
          args:
            - --name={{ .Values.nodeConfig.name }}
            - --base-path={{ .Values.nodeConfig.basePath }}
            - --chain={{ .Values.nodeConfig.chain }}
            - --port={{ .Values.nodeConfig.port }}
            - --ws-port={{ .Values.nodeConfig.wsPort }}
            - --rpc-port={{ .Values.nodeConfig.rpcPort }}
            - --telemetry-url={{ .Values.nodeConfig.telemetryUrl }}
            - --pruning={{ .Values.nodeConfig.pruning }}
            - --node-key-file={{ .Values.nodeConfig.keyFile }}
            - --keystore-path={{ .Values.nodeConfig.keystorePath }}
            - --bootnodes={{ .Values.nodeConfig.bootnodes }}
            {{- if .Values.nodeConfig.validator }}
            - --validator
            {{- end }}
            - --rpc-cors={{ .Values.nodeConfig.rpcCors }}
            - --rpc-methods={{ .Values.nodeConfig.rpcMethods }}
            {{- if .Values.nodeConfig.exposeExternal.ws }}
            - --ws-external
            {{- end }}
            {{- if .Values.nodeConfig.exposeExternal.rpc }}
            - --rpc-external
            {{- end }}
          env:
            - name: AWS_DEFAULT_REGION
              value: "eu-west-1"
            - name: NODE_NAME
              value: "{{ .Values.nodeConfig.name }}"
          volumeMounts:
            - name: keystore-storage
              mountPath: {{ .Values.nodeConfig.keystorePath }}
            - name: blockchain-storage
              mountPath: {{ .Values.nodeConfig.basePath }}
          ports:
            - containerPort: {{ .Values.service.p2pPort }}
              name: p2p
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
      volumes:
        - name: keystore-storage
          persistentVolumeClaim:
            claimName: {{ include "opticonomy-node.fullname" . }}-keystore
        - name: blockchain-storage
          persistentVolumeClaim:
            claimName: {{ include "opticonomy-node.fullname" . }}-blockchain
{{- end }}




# {{- if not .Values.archive.enabled }}
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: {{ include "opticonomy-node.fullname" . }}
#   labels:
#     app: {{ include "opticonomy-node.name" . }}
#     role: {{ .Values.nodeConfig.name | quote }}
# spec:
#   replicas: {{ .Values.replicaCount }}
#   selector:
#     matchLabels:
#       app: {{ include "opticonomy-node.name" . }}
#       role: {{ .Values.nodeConfig.name | quote }}
#   template:
#     metadata:
#       labels:
#         app: {{ include "opticonomy-node.name" . }}
#         role: {{ .Values.nodeConfig.name | quote }}
#     spec:
#       containers:
#         - name: opticonomy-node
#           image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
#           imagePullPolicy: {{ .Values.image.pullPolicy }}
#           command: ["/opticonomy-testnet/target/release/substrate-opticonomy"]
#           args:
#             - --name={{ .Values.nodeConfig.name }}
#             - --base-path={{ .Values.nodeConfig.basePath }}
#             - --chain={{ .Values.nodeConfig.chain}}
#             - --port={{ .Values.nodeConfig.port }}
#             - --ws-port={{ .Values.nodeConfig.wsPort }}
#             - --rpc-port={{ .Values.nodeConfig.rpcPort }}
#             - --telemetry-url={{ .Values.nodeConfig.telemetryUrl }}
#             - --pruning={{ .Values.nodeConfig.pruning }}
#             - --node-key-file={{ .Values.nodeConfig.keyFile }}
#             - --keystore-path={{ .Values.nodeConfig.keystorePath }}
#             - --bootnodes={{ .Values.nodeConfig.bootnodes }}
#             {{- if .Values.nodeConfig.validator }}
#             - --validator
#             {{- end }}
#             - --rpc-cors={{ .Values.nodeConfig.rpcCors }}
#             - --rpc-methods={{ .Values.nodeConfig.rpcMethods }}
#             {{- if .Values.nodeConfig.exposeExternal.ws }}
#             - --ws-external
#             {{- end }}
#             {{- if .Values.nodeConfig.exposeExternal.rpc }}
#             - --rpc-external
#             {{- end }}
#           volumeMounts:
#             - name: keystore-storage
#               mountPath: {{ .Values.nodeConfig.keystorePath }}
#             - name: blockchain-storage
#               mountPath: {{ .Values.nodeConfig.basePath }}
#           ports:
#             - containerPort: {{ .Values.service.p2pPort }}
#               name: p2p
#           resources:
#             limits:
#               cpu: {{ .Values.resources.limits.cpu }}
#               memory: {{ .Values.resources.limits.memory }}
#             requests:
#               cpu: {{ .Values.resources.requests.cpu }}
#               memory: {{ .Values.resources.requests.memory }}
#       volumes:
#         - name: keystore-storage
#           persistentVolumeClaim:
#             claimName: {{ include "opticonomy-node.fullname" . }}-keystore
#         - name: blockchain-storage
#           persistentVolumeClaim:
#             claimName: {{ include "opticonomy-node.fullname" . }}-blockchain
# {{- end }}