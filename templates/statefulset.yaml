apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.nodeConfig.name }}
  labels:
    app: {{ .Values.nodeConfig.labels.app }}
spec:
  serviceName: "archive-node"
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.nodeConfig.labels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.nodeConfig.labels.app }}
    spec:
      containers:
      - name: {{ .Values.nodeConfig.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
          - --base-path={{ .Values.nodeConfig.basePath }}
          - --chain={{ .Values.nodeConfig.chain }}
          - --name={{ .Values.nodeConfig.name }}
          - --port={{ .Values.nodeConfig.port }}
          - --pruning={{ .Values.nodeConfig.pruning }}
          - --bootnodes={{ .Values.nodeConfig.bootnodes }}
        volumeMounts:
        - name: archive-node-storage
          mountPath: {{ .Values.nodeConfig.basePath }}
        ports:
        - containerPort: {{ .Values.service.p2pPort }}
          name: p2p
      volumes:
        - name: archive-node-storage
          persistentVolumeClaim:
            claimName: archive-node-pvc
  volumeClaimTemplates:
  - metadata:
      name: archive-node-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
